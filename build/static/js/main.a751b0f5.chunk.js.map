{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notifications.js","App.js","index.js"],"names":["Filter","props","filterSearch","handleFilterSearch","value","onChange","PersonForm","newName","newNumber","handleNameChange","handleNumberChange","addPerson","onSubmit","type","DisplayNames","person","deletePerson","name","number","onClick","Persons","persons","displayNames","map","index","id","baseUrl","getAll","axios","get","then","response","data","create","personObjet","post","deleteId","personId","delete","console","log","update","newObject","put","Notifications","notifications","className","includes","App","useState","setPersons","setNewName","setNewNumber","showPersons","setShowPersons","setFilterSearch","setNotifications","useEffect","personService","responseData","catch","error","setTimeout","filter","toLowerCase","event","target","preventDefault","existingPerson","find","p","window","confirm","changedPerson","returnedPerson","personObject","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a751b0f5.chunk.js","sourcesContent":["\r\nconst Filter = (props) => {\r\n    const {filterSearch, handleFilterSearch } = props\r\n\r\n    return (\r\n        <div>\r\n            filter shown with <input  value={filterSearch} onChange={handleFilterSearch} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","/* import React from 'react' */\r\n\r\nconst PersonForm = (props) => {\r\n    const {newName, newNumber, handleNameChange, handleNumberChange, addPerson} = props\r\n\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={handleNumberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n","/* import React from 'react' */\r\n\r\nconst Persons = ({ persons, deletePerson }) => {\r\n    const displayNames = persons.map((person, index) => <DisplayNames key={person.id} person={person} deletePerson={deletePerson} />);\r\n\r\n    return (\r\n        <div>\r\n            {displayNames}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DisplayNames = ({ person, deletePerson}) => {\r\n    return (\r\n        <div>{person.name} {person.number}&nbsp;\r\n        <button onClick={() => deletePerson(person)}> delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from \"axios\"\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (personObjet) => {\r\n    const request = axios.post(baseUrl, personObjet)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteId = (personId) => {\r\n    const request = axios.delete(baseUrl+`/${personId}`)\r\n    return request.then((response) => console.log(response));\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nconst persons = {\r\n    getAll,\r\n    create,\r\n    deleteId,\r\n    update\r\n}\r\n\r\nexport default persons","import './Notifications.css'\r\n\r\nconst Notifications = ({notifications}) => {\r\n    if(notifications === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={notifications.includes('Information') || notifications.includes('validation failed:') ? \"notificationsError\" : \"notifications\" }>\r\n            {notifications}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React, { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notifications from './components/Notifications'\n\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showPersons, setShowPersons] = useState(persons)\n  const [filterSearch, setFilterSearch] = useState('')\n  const [notifications, setNotifications] = useState(null)\n\n\n  //[] means run one time after rendering.\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(responseData => setPersons(responseData))\n      .catch(error => {\n        console.log(error.response.data.error)\n        setNotifications(error.response.data.error)\n        setTimeout(() => {\n          setNotifications(null)\n        }, 5000)\n      })\n  }, [])\n\n\n  useEffect(() => {\n    setShowPersons(persons)\n  }, [persons])\n\n\n  //Callback for hooks filterSearch, everytime filterSearch gets update run this.\n  useEffect(() => {\n    setShowPersons(persons.filter(person => person.name.toLowerCase().includes(filterSearch.toLowerCase())))\n  }, [persons, filterSearch])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const existingPerson = persons.find(p => p.name === newName)\n\n    //Check if person name exist\n    if (existingPerson) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one`)) {\n        const changedPerson = { ...existingPerson, number: newNumber }\n\n        personService\n          .update(changedPerson.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id === existingPerson.id ? returnedPerson : person))\n            setNotifications(`Changed ${returnedPerson.name}'s number to ${returnedPerson.number}`)\n            setTimeout(() => {\n              setNotifications(null)\n            }, 5000)\n          })\n          .catch( error => {\n            console.log(error.response.data)\n            setNotifications(`Information of ${changedPerson.name} has already been removed from server`)\n            setPersons(persons.filter(p => p.id !== changedPerson.id))\n            setTimeout(() => {\n              setNotifications(null)\n            }, 5000)\n          })\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNotifications(`Added ${returnedPerson.name}`)\n          setTimeout(() => {\n            setNotifications(null)\n          }, 5000)\n        })\n        .catch(error => {\n          console.log(error.response.data.error)\n          setNotifications(error.response.data.error)\n          setTimeout(() => {\n            setNotifications(null)\n          }, 5000)\n        })\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deletePerson = (person) => {\n    console.log('deletePerson')\n\n    if (window.confirm(`Delete ${person.name} with id ${person.id}?`)) {\n      personService\n        .deleteId(person.id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== person.id))\n          console.log('Delete successful')\n        })\n        .catch(error => {\n          console.log(error.response.data.error)\n          setNotifications(error.response.data.error)\n          setTimeout(() => {\n            setNotifications(null)\n          }, 5000)\n        })\n    }\n  }\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterSearch = (event) => {\n    setFilterSearch(event.target.value)\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notifications notifications={notifications} />\n\n      <Filter\n        filterSearch={filterSearch}\n        handleFilterSearch={handleFilterSearch}\n      />\n\n      <h2>Add a new</h2>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson}\n      />\n\n      <h2>Numbers</h2>\n      <Persons persons={showPersons} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}